
//
// NOTE: –û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —Å—Ç—Ä–æ–∫–∞–º–∏ –≤ Swift, –Ω—É, –ø—Ä—è–º –æ–æ–æ–æ–æ–æ–æ–æ–æ–æ–æ–æ–æ–æ—á–µ–Ω—å "–º–Ω–æ–≥–æ—Å–ª–æ–≤–Ω—ã–µ", –ø–æ—ç—Ç–æ–º—É –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
// —Å—Ä–∞–∑—É –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ –º–∞—Å—Å–∏–≤—ã —Å–∏–º–≤–æ–ª–æ–≤, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–∏–º–≤–æ–ª–∞–º —Å—Ç—Ä–æ–∫–∏ –ø–æ –∏–Ω–¥–µ–∫—Å—É
//

//let haystackString = "sdgdsdrehujkfhjabbamfsdfkjsdhtiewelmrernjehllfmabdadmgkgfgaba"
//let needleString = "abba"

let haystackString = ".KOLOLOKOLOKOLOKOL"
let needleString = "KOLOKOL"

// 012345678901234567
// .KOLOLOKOLOKOLOKOL
//        KOLOKOL

let haystack = Array(haystackString)
let needle = Array(needleString)

print("üé± –°—Ç—Ä–æ–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –∏—â–µ–º:", haystackString)
print("üîç –°—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—É—é –∏—â–µ–º: \(needleString)\n")

example(of: "–ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:") {
    if let index = Finder.findIndex_bruteforce(needle, in: haystack) {
        print("–ù–∞–π–¥–µ–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å:", index)
    } else {
        print("–ù–µ –Ω–∞–π–¥–µ–Ω–æ")
    }
}

example(of: "–ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ \"–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º\" (—Ç–∞–±–ª–∏—Ü–∞ —Å–¥–≤–∏–≥–æ–≤) –ø–µ—Ä–µ–±–æ—Ä–æ–º:") {
    if let index = Finder.findIndex_shiftTable(needle, in: haystack) {
        print("–ù–∞–π–¥–µ–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å:", index)
    } else {
        print("–ù–µ –Ω–∞–π–¥–µ–Ω–æ")
    }
}
